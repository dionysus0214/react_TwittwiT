{"ast":null,"code":"import { all, takeLatest, fork, put, delay } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: 'ADD_POST_SUCCESS',\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      // put은 dispatch\n      type: 'ADD_POST_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest('ADD_POST_REQUEST', addPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)]);\n}","map":{"version":3,"sources":["C:/vscode/react_twitter/front/sagas/post.js"],"names":["all","takeLatest","fork","put","delay","axios","addPostAPI","data","post","addPost","action","type","result","err","response","watchAddPost","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,IAA1B,EAAgCC,GAAhC,EAAqCC,KAArC,QAAkD,oBAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACxB,SAAOF,KAAK,CAACG,IAAN,CAAW,WAAX,EAAwBD,IAAxB,CAAP;AACD;;AAED,UAAUE,OAAV,CAAkBC,MAAlB,EAA0B;AACxB,MAAI;AACF;AACA,UAAMN,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACRQ,MAAAA,IAAI,EAAG,kBADC;AAERJ,MAAAA,IAAI,EAAGK,MAAM,CAACL;AAFN,KAAD,CAAT;AAID,GAPD,CAOE,OAAMM,GAAN,EAAW;AACX,UAAMV,GAAG,CAAC;AAAE;AACVQ,MAAAA,IAAI,EAAG,kBADC;AAERJ,MAAAA,IAAI,EAAGM,GAAG,CAACC,QAAJ,CAAaP;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,UAAUQ,YAAV,GAAyB;AACvB,QAAMd,UAAU,CAAC,kBAAD,EAAqBQ,OAArB,CAAhB;AACD;;AAED,eAAe,UAAUO,QAAV,GAAqB;AAClC,QAAMhB,GAAG,CAAC,CACRE,IAAI,CAACa,YAAD,CADI,CAAD,CAAT;AAGD","sourcesContent":["import { all, takeLatest, fork, put, delay } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n\r\nfunction addPostAPI(data) {\r\n  return axios.post('/api/post', data);\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    // const result = yield call(addPostAPI, action.data);\r\n    yield delay(1000);\r\n    yield put({\r\n      type : 'ADD_POST_SUCCESS',\r\n      data : result.data,\r\n    });\r\n  } catch(err) {\r\n    yield put({ // put은 dispatch\r\n      type : 'ADD_POST_FAILURE',\r\n      data : err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield takeLatest('ADD_POST_REQUEST', addPost);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchAddPost),\r\n  ]);\r\n}"]},"metadata":{},"sourceType":"module"}